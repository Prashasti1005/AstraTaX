{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prashasti Singh\\\\google girl\\\\astratax\\\\frontend\\\\src\\\\components\\\\AIChatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AIChatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [userInput, setUserInput] = useState(\"\");\n  const sendMessage = async () => {\n    if (!userInput.trim()) return; // Ignore empty messages\n\n    const newMessages = [...messages, {\n      sender: \"user\",\n      text: userInput\n    }];\n    setMessages(newMessages);\n    setUserInput(\"\");\n    try {\n      var _data$candidates, _data$candidates$, _data$candidates$$con, _data$candidates$$con2, _data$candidates$$con3;\n      const response = await fetch(\"https://generativelanguage.googleapis.com/v1/models/gemini-pro:generateContent?key=YOUR_GEMINI_API_KEY\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          contents: [{\n            parts: [{\n              text: `Answer tax-related questions: ${userInput}`\n            }]\n          }]\n        })\n      });\n      const data = await response.json();\n      const aiReply = ((_data$candidates = data.candidates) === null || _data$candidates === void 0 ? void 0 : (_data$candidates$ = _data$candidates[0]) === null || _data$candidates$ === void 0 ? void 0 : (_data$candidates$$con = _data$candidates$.content) === null || _data$candidates$$con === void 0 ? void 0 : (_data$candidates$$con2 = _data$candidates$$con.parts) === null || _data$candidates$$con2 === void 0 ? void 0 : (_data$candidates$$con3 = _data$candidates$$con2[0]) === null || _data$candidates$$con3 === void 0 ? void 0 : _data$candidates$$con3.text) || \"Sorry, I couldn't process that.\";\n      setMessages([...newMessages, {\n        sender: \"ai\",\n        text: aiReply\n      }]);\n    } catch (error) {\n      console.error(\"Error fetching AI response:\", error);\n      setMessages([...newMessages, {\n        sender: \"ai\",\n        text: \"Error getting a response. Try again later!\"\n      }]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-black text-white flex flex-col items-center p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-4\",\n      children: \"AstraTax AI Chatbot \\uD83E\\uDD16\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-400 mb-6\",\n      children: \"Ask me any tax-related questions!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-2xl bg-gray-900 p-6 rounded-lg shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-80 overflow-y-auto space-y-4 p-3 border border-gray-700 rounded-md\",\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `p-2 rounded-lg ${msg.sender === \"user\" ? \"bg-blue-500 text-right\" : \"bg-gray-700 text-left\"}`,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"w-full p-2 bg-gray-800 text-white rounded-l-lg border border-gray-700\",\n          placeholder: \"Ask a tax question...\",\n          value: userInput,\n          onChange: e => setUserInput(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          className: \"px-4 bg-yellow-500 text-black font-bold rounded-r-lg hover:bg-yellow-600\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(AIChatbot, \"1zGRC38DTEORNFfajD4oL7sdkj8=\");\n_c = AIChatbot;\nexport default AIChatbot;\nvar _c;\n$RefreshReg$(_c, \"AIChatbot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AIChatbot","_s","messages","setMessages","userInput","setUserInput","sendMessage","trim","newMessages","sender","text","_data$candidates","_data$candidates$","_data$candidates$$con","_data$candidates$$con2","_data$candidates$$con3","response","fetch","method","headers","body","JSON","stringify","contents","parts","data","json","aiReply","candidates","content","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Prashasti Singh/google girl/astratax/frontend/src/components/AIChatbot.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst AIChatbot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [userInput, setUserInput] = useState(\"\");\r\n\r\n  const sendMessage = async () => {\r\n    if (!userInput.trim()) return; // Ignore empty messages\r\n\r\n    const newMessages = [...messages, { sender: \"user\", text: userInput }];\r\n    setMessages(newMessages);\r\n    setUserInput(\"\");\r\n\r\n    try {\r\n      const response = await fetch(\"https://generativelanguage.googleapis.com/v1/models/gemini-pro:generateContent?key=YOUR_GEMINI_API_KEY\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          contents: [{ parts: [{ text: `Answer tax-related questions: ${userInput}` }] }]\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      const aiReply = data.candidates?.[0]?.content?.parts?.[0]?.text || \"Sorry, I couldn't process that.\";\r\n\r\n      setMessages([...newMessages, { sender: \"ai\", text: aiReply }]);\r\n    } catch (error) {\r\n      console.error(\"Error fetching AI response:\", error);\r\n      setMessages([...newMessages, { sender: \"ai\", text: \"Error getting a response. Try again later!\" }]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-black text-white flex flex-col items-center p-6\">\r\n      <h1 className=\"text-3xl font-bold mb-4\">AstraTax AI Chatbot ðŸ¤–</h1>\r\n      <p className=\"text-gray-400 mb-6\">Ask me any tax-related questions!</p>\r\n\r\n      <div className=\"w-full max-w-2xl bg-gray-900 p-6 rounded-lg shadow-lg\">\r\n        <div className=\"h-80 overflow-y-auto space-y-4 p-3 border border-gray-700 rounded-md\">\r\n          {messages.map((msg, index) => (\r\n            <div key={index} className={`p-2 rounded-lg ${msg.sender === \"user\" ? \"bg-blue-500 text-right\" : \"bg-gray-700 text-left\"}`}>\r\n              <p>{msg.text}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"mt-4 flex\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"w-full p-2 bg-gray-800 text-white rounded-l-lg border border-gray-700\"\r\n            placeholder=\"Ask a tax question...\"\r\n            value={userInput}\r\n            onChange={(e) => setUserInput(e.target.value)}\r\n          />\r\n          <button\r\n            onClick={sendMessage}\r\n            className=\"px-4 bg-yellow-500 text-black font-bold rounded-r-lg hover:bg-yellow-600\"\r\n          >\r\n            Send\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AIChatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}